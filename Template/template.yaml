AWSTemplateFormatVersion: "2010-09-09"
Description: "Glue Week2"
Parameters:
  DataBaseName:
    Type: String
  BucketName:
    Type: String
  CrawlerName:
    Type: String
  JobName:
    Type: String
  DataBucket:
    Type: String
Resources:
  roleglue:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: S3Policyglue
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:*
                  - logs:PutLogEvents
                  - logs:*
                  - glue:Get*
                  - glue:CreateTable
                Resource: "*"
  Database:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref DataBaseName
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
  Crawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref CrawlerName
      Role: !GetAtt roleglue.Arn
      DatabaseName: !Ref Database
      Targets:
        S3Targets:
          - Path: !Sub s3://${BucketName}/job-output/
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
  job:
    Type: AWS::Glue::Job
    Properties:
      AllocatedCapacity: 2
      Command:
        Name: glueetl
        ScriptLocation: !Sub s3://${DataBucket}/job_scripts/job.py
        PythonVersion: '3'
      ExecutionProperty:
        MaxConcurrentRuns: 2
      Name: !Ref JobName
      Role: !GetAtt roleglue.Arn
      GlueVersion: 1.0
      DefaultArguments:
        '--TempDir': !Sub s3://${BucketName}/